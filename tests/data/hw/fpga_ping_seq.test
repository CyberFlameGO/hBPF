-- asm
# This program monitors received IP4 ICMP Echo/Ping requests
# and checks that their sequence number is consistent. It sets the
# error LED at the first lost request.
#
# A request with a lower sequence number then the last processed
# is interpreted as the start of a new test sequence and error LED is reset.
#
# This program needs call handler support for some hBPF CPU extensions. This
# means the FPGA must run a bitstream containing this call handler extensions.
# See also `source/fpga/hw/arty-s7-50-nic/call_handler.py`
#
# This file is not part of normal test suite (thus disabled for all tests)
# but is used to easily make changes and try out things manually for
# source/fpga/hw/arty-s7-50-nic for an example.
# To enable set 'disable_hw_test' to 0

# Get Ethertype from received packet into R4
mov32 r1, 12
ldxh r4, [r1]
be16 r4

# Check if its value is 0x0800 (= IP4)
jeq r4, 0x0800, +1
ja +25

# Check if its an IP4 ICMP packet
mov32 r1, 23
ldxb r3, [r1]
jne r3, 1, +22

# Check if IP4 ICMP Echo (Ping) request
mov32 r1, 34
ldxb r3, [r1]
jne r3, 8, +19

# Get sequence number of request into R5
mov32 r1, 40
ldxh r5, [r1]
be16 r5

# Read last sequence from store into R6
mov r1, 0
call 0xff000003
mov r6, r0

# If sequence smaller than last stored,
# set sequence as new start (just store)
# and clear LEDs
jle r5, r6, +1
ja +3

# Clear LEDs
mov r1, 0
call 0xff000001
ja +5

# If sequence > then last sequence + 1 then
# we missed a ping, set packet error LED
add32 r6, 1
jne r5, r6, +1
ja +2

# Set packet error LED
mov r1, 4
call 0xff000001

# Store new sequence number
mov r1, 0
mov r2, r5
call 0xff000002

# Return current sequence with R0
mov r0, r6
exit

-- mem
10 e2 d5 00 00 00 00 50 b6 19 72 e1 08 00 45 00
00 54 50 c5 40 00 40 01 c1 4e 0a 00 0a 64 0a 00
0a 32 08 00 13 3e 01 df 00 02 ac 2c c3 60 00 00
00 00 ac 7d 08 00 00 00 00 00 10 11 12 13 14 15
16 17 18 19 1a 1b 1c 1d 1e 1f 20 21 22 23 24 25
26 27 28 29 2a 2b 2c 2d 2e 2f 30 31 32 33 34 35
36 37

-- result
0x0002

-- expected
disable_emu_test = 1
disable_sim_test = 1
disable_hw_test = 1
